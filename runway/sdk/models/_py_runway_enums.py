# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.7.6, generator: @autorest/python@5.12.6)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from six import with_metaclass
from azure.core import CaseInsensitiveEnumMeta


class AccessFlags(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    READ = "Read"
    CREATE = "Create"
    UPDATE = "Update"
    DELETE = "Delete"
    REMOTE = "Remote"
    EXECUTE = "Execute"
    ADMIN = "Admin"
    SUPER_ADMIN = "SuperAdmin"

class ActionSettingType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    STRING = "String"
    NUMBER = "Number"
    BOOLEAN = "Boolean"
    PASSWORD = "Password"

class ActionState(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    UNINITIALIZED = "Uninitialized"
    READY = "Ready"
    RUNNING = "Running"
    WAITING = "Waiting"
    FINISHED = "Finished"

class EnrollmentType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    UNINITIALIZED = "Uninitialized"
    ADD_MEMBERSHIP = "AddMembership"
    ACTIVATE_USER_CREDENTIAL = "ActivateUserCredential"
    ENROLL_EPHEMERAL_CONTAINER = "EnrollEphemeralContainer"
    ENROLL_PERSISTENT_RUNNER = "EnrollPersistentRunner"
    ENROLL_CLOUD_WORKER = "EnrollCloudWorker"
    ENROLL_PERSISTENT_CLOUD = "EnrollPersistentCloud"

class Enum6(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    AGNOSTIC = "Agnostic"
    CLOUD = "Cloud"
    WINDOWS64 = "Windows64"
    WINDOWS32 = "Windows32"
    LINUX64 = "Linux64"
    LINUX32 = "Linux32"
    MAC_OS = "MacOS"
    ANDROID = "Android"
    I_OS = "iOS"

class FilterDataType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    STRING = "String"
    INTEGER = "Integer"
    BOOLEAN = "Boolean"
    TIMESTAMP = "Timestamp"

class JobScheduleType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    RUN_NOW = "RunNow"
    RUN_ONCE = "RunOnce"
    RUN_EVERY = "RunEvery"

class JobThreadState(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    UNINITIALIZED = "Uninitialized"
    NOT_STARTED = "NotStarted"
    RUNNING = "Running"
    WAITING = "Waiting"
    FINISHED = "Finished"

class NodeAffinity(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    EPHEMERAL_CONTAINER = "EphemeralContainer"
    PERSISTENT_RUNNER = "PersistentRunner"
    CLOUD_WORKER = "CloudWorker"
    PERSISTENT_CLOUD = "PersistentCloud"
    UTILITY = "Utility"
    KUBE_MASTER_AGENTLESS = "KubeMasterAgentless"

class NodeState(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    NOT_ENROLLED = "NotEnrolled"
    ENROLLED = "Enrolled"

class Platform(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    AGNOSTIC = "Agnostic"
    CLOUD = "Cloud"
    WINDOWS64 = "Windows64"
    WINDOWS32 = "Windows32"
    LINUX64 = "Linux64"
    LINUX32 = "Linux32"
    MAC_OS = "MacOS"
    ANDROID = "Android"
    I_OS = "iOS"

class RepositoryLicense(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    FREE = "Free"
    PAID = "Paid"

class RepositoryScope(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    PRIVATE = "Private"
    PUBLIC = "Public"

class RunLocation(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    UNINITIALIZED = "Uninitialized"
    RUN_ON_PRODIGAL_OBJECT = "RunOnProdigalObject"
    RUN_ON_GENERIC_POOL = "RunOnGenericPool"
    RUN_ON_SPECIFIC_OBJECT = "RunOnSpecificObject"
    RUN_ON_DEDICATED_SERVICE = "RunOnDedicatedService"
    RUN_ON_CONNECTION = "RunOnConnection"

class SortDirection(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    ASCENDING = "Ascending"
    DESCENDING = "Descending"

class StepResult(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    UNINITIALIZED = "Uninitialized"
    SUCCESS = "Success"
    FAILURE = "Failure"
